(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{141:function(e,a,n){n(142),n(350),e.exports=n(347)},345:function(e,a,n){var t={"./main.md":346};function l(e){var a=r(e);return n(a)}function r(e){if(!n.o(t,e)){var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}return t[e]}l.keys=function(){return Object.keys(t)},l.resolve=r,e.exports=l,l.id=345},346:function(e,a,n){"use strict";n.r(a),n.d(a,"slides",function(){return v}),n.d(a,"fusumaProps",function(){return y}),n.d(a,"default",function(){return F});var t=n(93),l=n.n(t),r=n(94),c=n.n(r),i=n(95),u=n.n(i),b=n(96),p=n.n(b),m=n(97),o=n.n(m),O=n(98),j=n.n(O),s=n(99),N=n.n(s),h=n(3),d=n.n(h),f=n(1);function g(e,a){if(null==e)return{};var n,t,l=function(e,a){if(null==e)return{};var n,t,l={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(l[n]=e[n]);return l}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}function S(){return(S=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e}).apply(this,arguments)}var v=[function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"仮想通貨取引所 bitbank の IaC の導入と実践"),Object(f.a)("div",{className:"bottom"},Object(f.a)("h4",null,"2019/07/30 X-Tech JAWS @AWS")))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"Who?"),Object(f.a)("h4",null,"Shogo Ishikawa (@koarakko99)"),Object(f.a)("br",null),Object(f.a)("img",{src:l.a,width:200}),Object(f.a)("br",null),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"Engineer @ Bitbank (2018/04-)")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"AWS Team"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h5",{parentName:"li"},"CI/CD")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h5",{parentName:"li"},"Account management")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h5",{parentName:"li"},"Fargate, EB")))),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"Favorite service"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h5",{parentName:"li"},"CloudFormation, VPC"))))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"Who?"),Object(f.a)("h4",null,"Yuta Suzuki (@euxn23)"),Object(f.a)("br",null),Object(f.a)("img",{src:c.a,width:200}),Object(f.a)("br",null),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"Engineer @ Bitbank (2018/07-)")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"Developer Success Team"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h5",{parentName:"li"},Object(f.a)("a",{src:"https://www.slideshare.net/bitbankink/developersuccess"},"DeveloperSuccess として何を届けられるか、様々な分野を経た先として何ができるか"))),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h5",{parentName:"li"},"AWS, DevOps, NodeJS Engineer")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h5",{parentName:"li"},"formerly, Application Engineer (Angular / TS Backend)")))),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"Using AWS half a year"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h5",{parentName:"li"},"awswakaran.tokyo co-founder (w/@potato4d)"))))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"bitbank とは"))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"ビットバンクは、ビットコインなどを扱う仮想通貨取引所です"),Object(f.a)("img",{src:u.a,width:1366}))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"bitbank.cc は Angular + TypeScript + AWS です"),Object(f.a)("img",{src:p.a,width:1366}))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"bitbank における活用状況"),Object(f.a)("img",{src:o.a,width:600}),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"ElasticBeanstalk を利用した CodePipeline")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"CloudFormation StackSets を利用したアカウント管理")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"GitLab Runner の構築"))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"導入編"))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"なぜ IaC を導入したのか？"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"リソースが何が起因作られたかわからなくなった")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"同じ環境を手作業で作るのがシンドかった")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"環境を何回も作り直したかった。"))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"なぜ CloudFormation を採用したか？"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"AWS 以外のクラウドの利用予定がなかった")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"AWS ドキュメントに慣れていたため")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"悩みを AWS サポートに相談できるから"))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"CloudFormation の習得するためにやったこと"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"AWS CloudFormation の公式ドキュメントを読んだ")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"GitHub で他人のコードを読んだ"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"Resource 名で検索するとヒットするのでそれを読んだ"))))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"特に習得しておくと便利なテクニック"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"疑似パラメータを積極的に使う。")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"なるべく nested しておき、汎用性を高める")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"最初手作業で作って、describe の結果を利用"))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"疑似パラメータを積極的に使う。"))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"アカウント ID => AWS::AccountId")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"リージョン => AWS::Region")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"スタック ID => AWS::StackId など"))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"なるべく nested しておき、汎用性を高める"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-yaml"}),"Resources:\n  IamRole:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      TemplateURL: ../../components/iam.yml\n      Parameters:\n        IamPolicy: !Ref IamPolicy\n\n  MyInstance:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      TemplateURL: ../../components/ec2.yml\n      Parameters:\n        SubnetId: !Ref SubnetId\n        ImageId: !Ref ImageId\n        InstanceType: !Ref InstanceType\n        InstanceName: MyInstance\n        KeyName: !Ref KeyName\n        IamRole: !GetAtt IamRole.Outputs.MyInstanceProfile\n        SecurityGroupId: !Ref SecurityGroupId\n")))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"最初手作業で作って、describe の結果を利用"))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-json"}),'$ aws codepipeline get-pipeline\n...\n{\n    "pipeline": {\n        "name": "test",\n        "roleArn": "arn:aws:iam::xxxxxxxxxxxx:role/dev-test-codepipeline",\n        "artifactStore": {\n            "type": "S3",\n            "location": "testbucket"\n        },\n        "stages": [\n            {\n                "name": "Source",\n                "actions": [\n                    {\n                        "name": "App",\n                        "actionTypeId": {\n                            "category": "Source",\n                            "owner": "AWS",\n                            "provider": "CodeCommit",\n                            "version": "1"\n                        },\n                        "runOrder": 1,\n                        "configuration": {\n                            "BranchName": "dev",\n                            "RepositoryName": "testrepo"\n                        },\n                        "outputArtifacts": [\n                            {\n                                "name": "App"\n                            }\n                        ],\n                        "inputArtifacts": []\n                    }\n                ]\n            },\n...\n')))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("p",null,"CLI の結果を転記する"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-yaml"}),"Pipeline:\n  Type: AWS::CodePipeline::Pipeline\n  Properties:\n    Name: !Ref ApplicationName\n    RoleArn: !GetAtt CodePipelineServiceRole.Arn\n    ArtifactStore:\n      Type: S3\n      Location: testbucket\n    Stages:\n      - Name: Source\n        Actions:\n          - Name: App\n            ActionTypeId:\n              Category: Source\n              Owner: AWS\n              Version: 1\n              Provider: CodeCommit\n            Configuration:\n              RepositoryName: testrepo\n              BranchName: dev\n            OutputArtifacts:\n              - Name: App\n            RunOrder: 1\n")))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"クロススタック参照は使わなかった"),Object(f.a)("p",null,"以下のような記述"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-yaml"}),"Outputs:\n  WebSG:\n    Description: Service VPC\n    Value: !Ref ServiceVPC\n    Export:\n      Name: 'stack-service-vpc'\n")))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"使わなかった理由"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"クロススタック参照の値を変更がしづらい")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"テスト時などで値を変えたい"))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"ParameterStore を使うメリット"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"値の変換が簡単")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"一覧で見やすい"))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"代わりに ParameterStore に値を入れた"),Object(f.a)("p",null,"SG の ARN を ParameterStore に格納"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-yaml"}),"Resources:\n  InstanceSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: test-sg\n      VpcId: !Ref VpcId\n      SecurityGroupEgress:\n        - IpProtocol: '-1'\n          CidrIp: 0.0.0.0/0\n\n  SecurityGroupIdParameter:\n    Type: AWS::SSM::Parameter\n    Properties:\n      Name: test-sg\n      Type: String\n      Value: !Ref InstanceSecurityGroup\n")),Object(f.a)("h1",null,"取得時"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-yaml"}),"AWSTemplateFormatVersion: '2010-09-09'\nDescription: Main template.\n\nParameters:\n  SecurityGroupId:\n    Type: AWS::SSM::Parameter::Value<String<AWS::EC2::SecurityGroup::Id>>\n    Default: test-sg\n")))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"そのほか、CloudFormation で苦労したところ"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"サービスの制約"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"文字数制限")))),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"IAM 権限の不足"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"権限を厳密に書きすぎて、必要な権限が足りない")))),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"全部が対応している訳ではない。"))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"導入編 まとめ"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},"CloudFormation は最初にドキュメントを読んで全体をつかんだ方がよい"),Object(f.a)("li",{parentName:"ul"},"実際に作るときは、AWS CLI を使うことで簡単に Resource の値を入れられる")))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"実践編"))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"Q. CloudFormation の実行、どうしてますか？"))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"A. make？"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},"make は冪等性担保と相性が良い"),Object(f.a)("li",{parentName:"ul"},"make は複雑な引数処理ができる"),Object(f.a)("li",{parentName:"ul"},"make は使い回しができる")))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"＿人人人人人＿"),Object(f.a)("h1",null,"＞　できる　＜"),Object(f.a)("h1",null,"￣ Y^Y^Y^Y ￣"),Object(f.a)("div",{className:"padding"}),Object(f.a)("h2",null,"(簡単とは言っていない)"))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"Q. make では too much なケースでは？"))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"A. npm script"))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"bitbank は JS が社内標準語なので"),Object(f.a)("h1",null,"package.json(npm run) で一部管理しています"),Object(f.a)("h2",null,"(CDK が npm ecosystem なので、今後 AWS 系のエンジニアにも npm は普及するはず)"))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"メリット"),Object(f.a)("div",{className:"padding"}),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h2",{parentName:"li"},"何をやっているかわかりやすくするため"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"IaC は読むためにあるので、読みやすさは大事")))),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h2",{parentName:"li"},"コマンドのオペミスを減らすため"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"IaC コマンドを手順書からコピー&ペーストしているとそのうち絶対にミスするので"))))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"例"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h2",{parentName:"li"},"GitLab CI Runner の構築")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h2",{parentName:"li"},"フロントエンド検証環境の構築"))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h2",null,"なぜ CFn の簡易コマンド化が必要か"),Object(f.a)("div",{className:"padding"}),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"デプロイ対象や検証環境ごとに権限対象が異なる")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"デプロイ対象や検証環境が増えるたびに環境を作成する")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"AWS 担当以外の開発者も CFn を触れることで開発を高速化できる"))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"Q. CloudFormation にないところはどう実行するか"))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"A. SDK を使って冪等っぽくなるようにたたく"))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"具体例"),Object(f.a)("img",{src:j.a,width:960}),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h2",{parentName:"li"},"Fargate の環境変数の ValueFrom (ParameterStore からの取得は)"),Object(f.a)("h2",{parentName:"li"},"長らく CFn では記述できなかった"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"現在は実装済み")))),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h2",{parentName:"li"},"TaskDefinitions を更新するたびに ただの環境変数に戻ってしまう"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"デプロイの都度、主導で直すのは手間だし、忘れる"))))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"SDK で解決 (冪等になります)"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-typescript"}),"const taskDefinitionFamilies = await ecs.listTaskDefinitionFamilies({ status: 'ACTIVE' }).promise();\n  if (!taskDefinitionFamilies.families) {\n    throw new Error('listTaskDefinitionFamilies failed');\n  }\n\n  for (const family of taskDefinitionFamilies.families) {\n    console.log(`${family} task definition update start`);\n    const { taskDefinition } = await ecs.describeTaskDefinition({ taskDefinition: family }).promise();\n    if (!taskDefinition || !taskDefinition.containerDefinitions) {\n      throw new Error('describeTaskDefinition failed');\n    }\n\n    const { containerDefinitions, executionRoleArn, cpu, memory, taskRoleArn, requiresCompatibilities, networkMode } = taskDefinition;\n\n    const requestContainerDefinitions = containerDefinitions.map((def) => ({\n      ...def,\n      secrets: [\n        ...(def.secrets || []),\n        ...def\n          .environment!.filter((env) => envToSecretKeys.includes(env.name!))\n          .map((env) => ({\n            name: env.name!,\n            valueFrom: env.value!,\n          })),\n      ],\n      environment: def.environment!.filter((env) => !envToSecretKeys.includes(env.name!)),\n    }));\n")))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"Q. CFn の parameter-overrides って実行時エラー出したくない"))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"A. 型安全になるように TypeScript の template から注入する"),Object(f.a)("h2",null,"(quicktype.js を使いました)"))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("p",null,"config.template.yml.ts"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-typescript"}),"import { Convert, Env } from './env.quicktype';\n\nexport function prepare(env: string = 'default'): Env {\n  const envJson = JSON.stringify(require(`./.env.${env}`));\n\n  return Convert.toEnv(envJson);\n}\n\n// language=yaml\nexport default ({ envName, nodeEnv, awsAccountId, defaultCpu, defaultMemoryMb }: Env) => `\\\nall:\n  Application: app\n  SSMKeyPrefix: /${envName}/\n...\n")))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("p",null,"env.quicktype.ts"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-typescript"}),"export interface Env {\n  envName: string;\n  nodeEnv: string;\n  awsAccountId: string;\n  defaultCpu: string;\n  defaultMemoryMb: string;\n}\n")),Object(f.a)("p",null,"env.develop.ts"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-typescript"}),"import { Env } from './env.quicktype';\n\nconst env: Env = {\n  envName: 'app-dev',\n  nodeEnv: 'develop',\n  awsAccountId: '123456789012',\n  defaultCpu: '256',\n  defaultMemoryMb: '512'\n};\n\nmodule.exports = env;\n")),Object(f.a)("p",null,"materialize-template.ts"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-typescript"}),"import * as fs from 'fs';\nimport { resolve } from 'path';\nimport main, { prepare } from './config.template.yml';\n\nconst env = process.env.ENV;\nif (!env) {\n  throw new Error('$ENV is required');\n}\nfs.writeFileSync(resolve(__dirname, `config.${env}.yml`), main(prepare(env)));\n")))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"アプリケーション指向の解決方法を実践"),Object(f.a)("div",{className:"padding"}),Object(f.a)("h2",null,"。o (モノによっては aws-sdk (node) の型定義がそのままうまく使えるかも？)"))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"実践編まとめ"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"CloudFormation は使うとき/読むときのことを考える")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"CloudFormation の限界は SDK を使って超える")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"アプリケーション的なアプローチでより効率的かつ安全にする"))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"今後の展望"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"CloudFormation の社内普及を進めたい")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"CloudFormation のノウハウを言語化して共有したい")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"CDK の導入によりアプリケーションエンジニアでも触りやすくしたい"))))},function(e){return Object(f.a)(d.a.Fragment,null,Object(f.a)("h1",null,"イケている AWS を触りたい方"),Object(f.a)("h1",null,"ぜひ遊びに来てください"),Object(f.a)("img",{src:N.a}))}],y=[{classes:"title"},{},{},{},{classes:"image"},{classes:"image"},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{classes:"image"}],A={slides:v},k="wrapper";function F(e){var a=e.components,n=g(e,["components"]);return Object(f.a)(k,S({},A,n,{components:a,mdxType:"MDXLayout"}),Object(f.a)("h1",null,"仮想通貨取引所 bitbank の IaC の導入と実践"),Object(f.a)("div",{className:"bottom"},Object(f.a)("h4",null,"2019/07/30 X-Tech JAWS @AWS")),Object(f.a)("hr",null),Object(f.a)("h1",null,"Who?"),Object(f.a)("h4",null,"Shogo Ishikawa (@koarakko99)"),Object(f.a)("br",null),Object(f.a)("img",{src:l.a,width:200}),Object(f.a)("br",null),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"Engineer @ Bitbank (2018/04-)")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"AWS Team"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h5",{parentName:"li"},"CI/CD")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h5",{parentName:"li"},"Account management")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h5",{parentName:"li"},"Fargate, EB")))),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"Favorite service"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h5",{parentName:"li"},"CloudFormation, VPC"))))),Object(f.a)("hr",null),Object(f.a)("h1",null,"Who?"),Object(f.a)("h4",null,"Yuta Suzuki (@euxn23)"),Object(f.a)("br",null),Object(f.a)("img",{src:c.a,width:200}),Object(f.a)("br",null),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"Engineer @ Bitbank (2018/07-)")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"Developer Success Team"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h5",{parentName:"li"},Object(f.a)("a",{src:"https://www.slideshare.net/bitbankink/developersuccess"},"DeveloperSuccess として何を届けられるか、様々な分野を経た先として何ができるか"))),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h5",{parentName:"li"},"AWS, DevOps, NodeJS Engineer")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h5",{parentName:"li"},"formerly, Application Engineer (Angular / TS Backend)")))),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"Using AWS half a year"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h5",{parentName:"li"},"awswakaran.tokyo co-founder (w/@potato4d)"))))),Object(f.a)("hr",null),Object(f.a)("h1",null,"bitbank とは"),Object(f.a)("hr",null),Object(f.a)("h1",null,"ビットバンクは、ビットコインなどを扱う仮想通貨取引所です"),Object(f.a)("img",{src:u.a,width:1366}),Object(f.a)("hr",null),Object(f.a)("h1",null,"bitbank.cc は Angular + TypeScript + AWS です"),Object(f.a)("img",{src:p.a,width:1366}),Object(f.a)("hr",null),Object(f.a)("h1",null,"bitbank における活用状況"),Object(f.a)("img",{src:o.a,width:600}),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"ElasticBeanstalk を利用した CodePipeline")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"CloudFormation StackSets を利用したアカウント管理")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"GitLab Runner の構築"))),Object(f.a)("hr",null),Object(f.a)("h1",null,"導入編"),Object(f.a)("hr",null),Object(f.a)("h1",null,"なぜ IaC を導入したのか？"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"リソースが何が起因作られたかわからなくなった")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"同じ環境を手作業で作るのがシンドかった")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"環境を何回も作り直したかった。"))),Object(f.a)("hr",null),Object(f.a)("h1",null,"なぜ CloudFormation を採用したか？"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"AWS 以外のクラウドの利用予定がなかった")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"AWS ドキュメントに慣れていたため")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"悩みを AWS サポートに相談できるから"))),Object(f.a)("hr",null),Object(f.a)("h1",null,"CloudFormation の習得するためにやったこと"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"AWS CloudFormation の公式ドキュメントを読んだ")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"GitHub で他人のコードを読んだ"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"Resource 名で検索するとヒットするのでそれを読んだ"))))),Object(f.a)("hr",null),Object(f.a)("h1",null,"特に習得しておくと便利なテクニック"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"疑似パラメータを積極的に使う。")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"なるべく nested しておき、汎用性を高める")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"最初手作業で作って、describe の結果を利用"))),Object(f.a)("hr",null),Object(f.a)("h1",null,"疑似パラメータを積極的に使う。"),Object(f.a)("hr",null),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"アカウント ID => AWS::AccountId")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"リージョン => AWS::Region")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"スタック ID => AWS::StackId など"))),Object(f.a)("hr",null),Object(f.a)("h1",null,"なるべく nested しておき、汎用性を高める"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-yaml"}),"Resources:\n  IamRole:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      TemplateURL: ../../components/iam.yml\n      Parameters:\n        IamPolicy: !Ref IamPolicy\n\n  MyInstance:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      TemplateURL: ../../components/ec2.yml\n      Parameters:\n        SubnetId: !Ref SubnetId\n        ImageId: !Ref ImageId\n        InstanceType: !Ref InstanceType\n        InstanceName: MyInstance\n        KeyName: !Ref KeyName\n        IamRole: !GetAtt IamRole.Outputs.MyInstanceProfile\n        SecurityGroupId: !Ref SecurityGroupId\n")),Object(f.a)("hr",null),Object(f.a)("h1",null,"最初手作業で作って、describe の結果を利用"),Object(f.a)("hr",null),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-json"}),'$ aws codepipeline get-pipeline\n...\n{\n    "pipeline": {\n        "name": "test",\n        "roleArn": "arn:aws:iam::xxxxxxxxxxxx:role/dev-test-codepipeline",\n        "artifactStore": {\n            "type": "S3",\n            "location": "testbucket"\n        },\n        "stages": [\n            {\n                "name": "Source",\n                "actions": [\n                    {\n                        "name": "App",\n                        "actionTypeId": {\n                            "category": "Source",\n                            "owner": "AWS",\n                            "provider": "CodeCommit",\n                            "version": "1"\n                        },\n                        "runOrder": 1,\n                        "configuration": {\n                            "BranchName": "dev",\n                            "RepositoryName": "testrepo"\n                        },\n                        "outputArtifacts": [\n                            {\n                                "name": "App"\n                            }\n                        ],\n                        "inputArtifacts": []\n                    }\n                ]\n            },\n...\n')),Object(f.a)("hr",null),Object(f.a)("p",null,"CLI の結果を転記する"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-yaml"}),"Pipeline:\n  Type: AWS::CodePipeline::Pipeline\n  Properties:\n    Name: !Ref ApplicationName\n    RoleArn: !GetAtt CodePipelineServiceRole.Arn\n    ArtifactStore:\n      Type: S3\n      Location: testbucket\n    Stages:\n      - Name: Source\n        Actions:\n          - Name: App\n            ActionTypeId:\n              Category: Source\n              Owner: AWS\n              Version: 1\n              Provider: CodeCommit\n            Configuration:\n              RepositoryName: testrepo\n              BranchName: dev\n            OutputArtifacts:\n              - Name: App\n            RunOrder: 1\n")),Object(f.a)("hr",null),Object(f.a)("h1",null,"クロススタック参照は使わなかった"),Object(f.a)("p",null,"以下のような記述"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-yaml"}),"Outputs:\n  WebSG:\n    Description: Service VPC\n    Value: !Ref ServiceVPC\n    Export:\n      Name: 'stack-service-vpc'\n")),Object(f.a)("hr",null),Object(f.a)("h1",null,"使わなかった理由"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"クロススタック参照の値を変更がしづらい")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"テスト時などで値を変えたい"))),Object(f.a)("hr",null),Object(f.a)("h1",null,"ParameterStore を使うメリット"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"値の変換が簡単")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"一覧で見やすい"))),Object(f.a)("hr",null),Object(f.a)("h1",null,"代わりに ParameterStore に値を入れた"),Object(f.a)("p",null,"SG の ARN を ParameterStore に格納"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-yaml"}),"Resources:\n  InstanceSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: test-sg\n      VpcId: !Ref VpcId\n      SecurityGroupEgress:\n        - IpProtocol: '-1'\n          CidrIp: 0.0.0.0/0\n\n  SecurityGroupIdParameter:\n    Type: AWS::SSM::Parameter\n    Properties:\n      Name: test-sg\n      Type: String\n      Value: !Ref InstanceSecurityGroup\n")),Object(f.a)("h1",null,"取得時"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-yaml"}),"AWSTemplateFormatVersion: '2010-09-09'\nDescription: Main template.\n\nParameters:\n  SecurityGroupId:\n    Type: AWS::SSM::Parameter::Value<String<AWS::EC2::SecurityGroup::Id>>\n    Default: test-sg\n")),Object(f.a)("hr",null),Object(f.a)("h1",null,"そのほか、CloudFormation で苦労したところ"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"サービスの制約"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"文字数制限")))),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"IAM 権限の不足"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"権限を厳密に書きすぎて、必要な権限が足りない")))),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h3",{parentName:"li"},"全部が対応している訳ではない。"))),Object(f.a)("hr",null),Object(f.a)("h1",null,"導入編 まとめ"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},"CloudFormation は最初にドキュメントを読んで全体をつかんだ方がよい"),Object(f.a)("li",{parentName:"ul"},"実際に作るときは、AWS CLI を使うことで簡単に Resource の値を入れられる")),Object(f.a)("hr",null),Object(f.a)("h1",null,"実践編"),Object(f.a)("hr",null),Object(f.a)("h1",null,"Q. CloudFormation の実行、どうしてますか？"),Object(f.a)("hr",null),Object(f.a)("h1",null,"A. make？"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},"make は冪等性担保と相性が良い"),Object(f.a)("li",{parentName:"ul"},"make は複雑な引数処理ができる"),Object(f.a)("li",{parentName:"ul"},"make は使い回しができる")),Object(f.a)("hr",null),Object(f.a)("h1",null,"＿人人人人人＿"),Object(f.a)("h1",null,"＞　できる　＜"),Object(f.a)("h1",null,"￣ Y^Y^Y^Y ￣"),Object(f.a)("div",{className:"padding"}),Object(f.a)("h2",null,"(簡単とは言っていない)"),Object(f.a)("hr",null),Object(f.a)("h1",null,"Q. make では too much なケースでは？"),Object(f.a)("hr",null),Object(f.a)("h1",null,"A. npm script"),Object(f.a)("hr",null),Object(f.a)("h1",null,"bitbank は JS が社内標準語なので"),Object(f.a)("h1",null,"package.json(npm run) で一部管理しています"),Object(f.a)("h2",null,"(CDK が npm ecosystem なので、今後 AWS 系のエンジニアにも npm は普及するはず)"),Object(f.a)("hr",null),Object(f.a)("h1",null,"メリット"),Object(f.a)("div",{className:"padding"}),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h2",{parentName:"li"},"何をやっているかわかりやすくするため"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"IaC は読むためにあるので、読みやすさは大事")))),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h2",{parentName:"li"},"コマンドのオペミスを減らすため"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"IaC コマンドを手順書からコピー&ペーストしているとそのうち絶対にミスするので"))))),Object(f.a)("hr",null),Object(f.a)("h1",null,"例"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h2",{parentName:"li"},"GitLab CI Runner の構築")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h2",{parentName:"li"},"フロントエンド検証環境の構築"))),Object(f.a)("hr",null),Object(f.a)("h2",null,"なぜ CFn の簡易コマンド化が必要か"),Object(f.a)("div",{className:"padding"}),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"デプロイ対象や検証環境ごとに権限対象が異なる")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"デプロイ対象や検証環境が増えるたびに環境を作成する")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"AWS 担当以外の開発者も CFn を触れることで開発を高速化できる"))),Object(f.a)("hr",null),Object(f.a)("h1",null,"Q. CloudFormation にないところはどう実行するか"),Object(f.a)("hr",null),Object(f.a)("h1",null,"A. SDK を使って冪等っぽくなるようにたたく"),Object(f.a)("hr",null),Object(f.a)("h1",null,"具体例"),Object(f.a)("img",{src:j.a,width:960}),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h2",{parentName:"li"},"Fargate の環境変数の ValueFrom (ParameterStore からの取得は)"),Object(f.a)("h2",{parentName:"li"},"長らく CFn では記述できなかった"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"現在は実装済み")))),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h2",{parentName:"li"},"TaskDefinitions を更新するたびに ただの環境変数に戻ってしまう"),Object(f.a)("ul",{parentName:"li"},Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"デプロイの都度、主導で直すのは手間だし、忘れる"))))),Object(f.a)("hr",null),Object(f.a)("h1",null,"SDK で解決 (冪等になります)"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-typescript"}),"const taskDefinitionFamilies = await ecs.listTaskDefinitionFamilies({ status: 'ACTIVE' }).promise();\n  if (!taskDefinitionFamilies.families) {\n    throw new Error('listTaskDefinitionFamilies failed');\n  }\n\n  for (const family of taskDefinitionFamilies.families) {\n    console.log(`${family} task definition update start`);\n    const { taskDefinition } = await ecs.describeTaskDefinition({ taskDefinition: family }).promise();\n    if (!taskDefinition || !taskDefinition.containerDefinitions) {\n      throw new Error('describeTaskDefinition failed');\n    }\n\n    const { containerDefinitions, executionRoleArn, cpu, memory, taskRoleArn, requiresCompatibilities, networkMode } = taskDefinition;\n\n    const requestContainerDefinitions = containerDefinitions.map((def) => ({\n      ...def,\n      secrets: [\n        ...(def.secrets || []),\n        ...def\n          .environment!.filter((env) => envToSecretKeys.includes(env.name!))\n          .map((env) => ({\n            name: env.name!,\n            valueFrom: env.value!,\n          })),\n      ],\n      environment: def.environment!.filter((env) => !envToSecretKeys.includes(env.name!)),\n    }));\n")),Object(f.a)("hr",null),Object(f.a)("h1",null,"Q. CFn の parameter-overrides って実行時エラー出したくない"),Object(f.a)("hr",null),Object(f.a)("h1",null,"A. 型安全になるように TypeScript の template から注入する"),Object(f.a)("h2",null,"(quicktype.js を使いました)"),Object(f.a)("hr",null),Object(f.a)("p",null,"config.template.yml.ts"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-typescript"}),"import { Convert, Env } from './env.quicktype';\n\nexport function prepare(env: string = 'default'): Env {\n  const envJson = JSON.stringify(require(`./.env.${env}`));\n\n  return Convert.toEnv(envJson);\n}\n\n// language=yaml\nexport default ({ envName, nodeEnv, awsAccountId, defaultCpu, defaultMemoryMb }: Env) => `\\\nall:\n  Application: app\n  SSMKeyPrefix: /${envName}/\n...\n")),Object(f.a)("hr",null),Object(f.a)("p",null,"env.quicktype.ts"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-typescript"}),"export interface Env {\n  envName: string;\n  nodeEnv: string;\n  awsAccountId: string;\n  defaultCpu: string;\n  defaultMemoryMb: string;\n}\n")),Object(f.a)("p",null,"env.develop.ts"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-typescript"}),"import { Env } from './env.quicktype';\n\nconst env: Env = {\n  envName: 'app-dev',\n  nodeEnv: 'develop',\n  awsAccountId: '123456789012',\n  defaultCpu: '256',\n  defaultMemoryMb: '512'\n};\n\nmodule.exports = env;\n")),Object(f.a)("p",null,"materialize-template.ts"),Object(f.a)("pre",null,Object(f.a)("code",S({parentName:"pre"},{className:"language-typescript"}),"import * as fs from 'fs';\nimport { resolve } from 'path';\nimport main, { prepare } from './config.template.yml';\n\nconst env = process.env.ENV;\nif (!env) {\n  throw new Error('$ENV is required');\n}\nfs.writeFileSync(resolve(__dirname, `config.${env}.yml`), main(prepare(env)));\n")),Object(f.a)("hr",null),Object(f.a)("h1",null,"アプリケーション指向の解決方法を実践"),Object(f.a)("div",{className:"padding"}),Object(f.a)("h2",null,"。o (モノによっては aws-sdk (node) の型定義がそのままうまく使えるかも？)"),Object(f.a)("hr",null),Object(f.a)("h1",null,"実践編まとめ"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"CloudFormation は使うとき/読むときのことを考える")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"CloudFormation の限界は SDK を使って超える")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"アプリケーション的なアプローチでより効率的かつ安全にする"))),Object(f.a)("hr",null),Object(f.a)("h1",null,"今後の展望"),Object(f.a)("ul",null,Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"CloudFormation の社内普及を進めたい")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"CloudFormation のノウハウを言語化して共有したい")),Object(f.a)("li",{parentName:"ul"},Object(f.a)("h4",{parentName:"li"},"CDK の導入によりアプリケーションエンジニアでも触りやすくしたい"))),Object(f.a)("hr",null),Object(f.a)("h1",null,"イケている AWS を触りたい方"),Object(f.a)("h1",null,"ぜひ遊びに来てください"),Object(f.a)("img",{src:N.a}))}F.isMDXComponent=!0},348:function(e,a,n){var t=n(349);"string"==typeof t&&(t=[[e.i,t,""]]);var l={hmr:!0,transform:void 0,insertInto:void 0};n(51)(t,l);t.locals&&(e.exports=t.locals)},349:function(e,a,n){},93:function(e,a,n){e.exports=n.p+"f7db44532d6aba2ab074ea24cf19dc14.webp"},94:function(e,a,n){e.exports=n.p+"6925ce247afde7754b849f53a4b5ae9a.webp"},95:function(e,a,n){e.exports=n.p+"6e3427a17c58c2b19dad56a334d54bbb.webp"},96:function(e,a,n){e.exports=n.p+"b16a3cb437cfa0d9c636829b8f906044.webp"},97:function(e,a,n){e.exports=n.p+"49ec59a52edd5adb51247ff89862e7e4.webp"},98:function(e,a,n){e.exports=n.p+"9e19bf6e8c3682f1d941c2f89eae0bbb.webp"},99:function(e,a,n){e.exports=n.p+"efeaafc721f11e776facf7fb528fd1a8.webp"}},[[141,5,7]],[0,9]]);